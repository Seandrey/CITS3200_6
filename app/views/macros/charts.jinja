## Author: David Norris (22690264)
## An array of dicts each with a title key, an id key and a bars key
##
## Example data:
##
## data = [
##     {
##         'title': 'Testing 1',
##         'id': 'test1',
##         'yMax': '0',
##         'domains': ('Cardiovascular', 'Musculosceletal', 'Metabolic'),
##         'hours': [
##             ('Referrals, Screening or Assessmnts', (3, 8, 12)),
##             ('Excercise Prescription', (9, 9, 9)),
##             ('Excercise Delivery', (0, 2, 4)),
##             ('Other', (3, 8, 9)),
##         ]
##     },
##     {
##         'title': 'Testing 2',
##         'id': 'test2',
##         'yMax': '200',
##         'domains': ('Cardiovascular', 'Musculosceletal', 'Metabolic'),
##         'hours': [
##             ('Referrals, Screening or Assessmnts', (32, 8, 12)),
##             ('Excercise Prescription', (9, 19, 49)),
##             ('Excercise Delivery', (10, 2, 24)),
##             ('Other', (13, 28, 9)),
##         ]
##     },
## ]
{% macro chart_head(charts) %}
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script type="text/javascript">

      // Get google Visualisation API and include ColumnChart
      google.load('visualization', '1', {'packages':['corechart']});

      // Set callback for once API loads
      google.setOnLoadCallback(drawChart);

      // This is the callback that draws after load
      function drawChart() {
        var data;
      // Each chart in the div is processed using same data var and drawn
      {%- for chart in charts %}
        data = new google.visualization.arrayToDataTable([
          [
            'Category',
            {%- for domain in chart['domains'] %}
            '{{ domain }}',
            {%- endfor %}
            {role: 'annotation'},
            {role: 'annotation'},
          ],
          {%- for type, domains in chart['hours'] %}
          [
            '{{ type }}',
            {%- set total = namespace(value=0) %}
            {%- for hours in domains %}
            {{ hours }},
            {%- set total.value = total.value + hours %}
            {%- endfor %}
            {{ total.value }},
            ''
          ],
          {%- endfor %}
        ]);
        var view = new google.visualization.DataView(data);
        var chart = new google.visualization.ColumnChart(
                document.getElementById("{{chart['id']}}")); // chart div id from dict
        var options = {
          title: '{{chart['title']}}', // title from dict
          titleTextStyle: {
            fontSize: 20,
            bold: true
          },
          isStacked: true,
          legend: {position: 'bottom', maxLines: 3},
          vAxis: {
            title: 'Hours',
            maxValue: {{ chart['yMax'] }}
          },
          annotations: {
            stem: {
              color: "transparent",
              length: 5
            },
            textStyle: {
              color: "#000000",
              fontSize: 14,
              bold: true
            }
          },
        }
        chart.draw(view, options);
      {%- endfor %}
      }
    </script>
{% endmacro %}

## Creates a chart container, must have same id as dict
## Also styles the chart with a chart class
{% macro chart_div(id) %}
  <div class="chart" id="{{id}}"></div>
{% endmacro %}
